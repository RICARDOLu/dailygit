1.等差数列法 遍历项数从2到n o(n)时间复杂度
class Solution {
public:
    vector<vector<int>> findContinuousSequence(int target) {
        vector<vector<int>> res;
        int n =target;
        while(n-1){
            float tmp = (2*target-1.0*n*n+n)/(n*2.0);
            if(tmp>=1&&tmp==int(tmp)){
                int k = res.size();
                res.push_back(vector<int>(n));
                for(int i = 0;i<n;i++)res[k][i]=int(tmp++);
            }
            n--;
        }
        return res;
    }
};
2.滑动窗口 双指针
class Solution {
public:
    vector<vector<int>> findContinuousSequence(int target) {
        vector<vector<int>> res;
        int i=1,j=2;
        while(i<j&&j<=(target+1)/2){
            int tmp = ((i+j)*(j-i+1))/2;
            if(tmp>target)i++;
            else if(tmp<target)j++;
            else{
                res.push_back(vector<int>(j-i+1));
                for(int k=i;k<=j;k++)res[res.size()-1][k-i]=k;
                j++,i++;
            }
        }
        return res;
    }
};

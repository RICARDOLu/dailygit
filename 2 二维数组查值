暴力优化解法
class Solution {
public:
    bool findNumberIn2DArray(vector<vector<int>>& matrix, int target) {
        if(matrix.empty())return false;
        else if(matrix[0].empty())return false;
        int n=matrix.size(),m = matrix[0].size();
        for(int i=0;i<n;i++){
            if(matrix[i][0]<=target&&matrix[i][m-1]>=target){
                for(int j=0;j<m;j++){
                    if(matrix[i][j]==target)return true;
                    else if(matrix[i][j]>target)break;
                }
            }
        }
        return false;
    }
};
动态规划解法 时间复杂度 o(m+n)
class Solution {
public:
    bool findNumberIn2DArray(vector<vector<int>>& matrix, int target) {
        if(matrix.empty()||matrix[0].empty())return false;
        int i=0,j=matrix[0].size()-1;
        while(i<matrix.size()&&j>=0){
            if(matrix[i][j]>target)j--;
            else if(matrix[i][j]<target)i++;
            else return true;
        }
        return false;
    }
};

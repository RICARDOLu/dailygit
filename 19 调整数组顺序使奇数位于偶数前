1.尾部置换法(置换偶数)
class Solution {
public:
    vector<int> exchange(vector<int>& nums) {
        int i=0,j=nums.size()-1;
        while(i<j){
            if((nums[i]&1)==0){
                nums[i]^=nums[j];
                nums[j]^=nums[i];
                nums[i]^=nums[j];
                j--;
            }
            else i++;
        }
        return nums;
    }
};
2.头部置换法(置换奇数)
class Solution {
public:
    vector<int> exchange(vector<int>& nums) {
        int fast=0,low=0;
        while(fast!=nums.size()){
            if((nums[fast]&1)==1){
                int tmp = nums[fast];
                nums[fast]=nums[low],nums[low]=tmp;
                low++;
            }
            fast++;
        }
        return nums;
    }
};
